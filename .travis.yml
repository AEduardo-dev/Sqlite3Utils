language: cpp
os:
  - linux
  - osx
  # - windows

compiler:
  - gcc
  - clang

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-9
      - g++-9
      - cmake
      - sqlite3

# Matrix for macOS systems
jobs:
  include:
      # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-9
            - g++-9
            - cmake
            - sqlite3
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"

    # works on Trusty
    - os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-10
            - cmake
            - sqlite3
      env:
        - MATRIX_EVAL="CC=clang-10.0 && CXX=clang++-10.0"

    # - os: windows


    - os: osx
      osx_image: xcode9.4

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc && CC=gcc-9 && CXX=g++-9"

before_install:
    - eval "${MATRIX_EVAL}"


script:
  # Export CC and CXX to tell cmake which compiler to use
  - export CC=/usr/bin/gcc-9
  - export CXX=/usr/bin/g++-9
  # Check versions of gcc, g++ and cmake
  - gcc -v && g++ -v && cmake --version
  # Run your build commands next
  # Create dir for build files
  - mkdir build && cd build/
  # Run cmake default way
  - cmake ..
  # Then build the project
  - cmake --build .
  # Run the tests
  - ctest --progress --verbose
  # Then install the project
  - cmake --install .
